<?xml version="1.0"?>
<robot name="docbot" xmlns:xacro="http://ros.org/wiki/xacro">
    
    <xacro:include filename="$(find docbot_description)/urdf/inertial_macros.xacro"/>
    <xacro:include filename="$(find docbot_description)/urdf/docbot_ros2_control.xacro"/>
    <xacro:include filename="$(find docbot_description)/urdf/lidar.xacro"/>
    <xacro:include filename="$(find docbot_description)/urdf/properties.xacro"/>

    <link name="base_footprint"/>
        
    <link name="base_link">
        <visual>
            <origin xyz="0 0 ${base_height/2}"/>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
            <material name="Cyan">
                <color rgba="0 1.0 1.0 1.0"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0 0 ${base_height/2}"/>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="1.0" x="${base_length}" y="${base_width}" z="${base_height}">
            <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
        </xacro:inertial_box>


    </link>

    <joint name="base_joint" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link"/>
        <origin xyz="0.0 0.0 ${(wheel_radius + wheel_zoff)}" rpy="0.0 0.0 0.0"/>
        
    </joint>

    <!-- Wheels -->
    <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
        <link name="${prefix}_link">
            <visual>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
                </geometry>
                <material name="Gray">
                    <color rgba="0.5 0.5 0.5 1.0"/>
                </material>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/> 
                </geometry>
            </collision>
            <xacro:inertial_cylinder mass="0.02" length="${wheel_width}" radius="${wheel_radius}">
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
            </xacro:inertial_cylinder>
        </link>

        <joint name="${prefix}_joint" type="continuous">
            <parent link="base_link"/>
            <child link="${prefix}_link"/>
            <origin xyz="${x_reflect * wheel_xoff}  ${y_reflect*(base_width/2 + wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
            <axis xyz="0 1 0"/>
        </joint>
    </xacro:macro>

    <xacro:wheel prefix="wheel_left" x_reflect="-1" y_reflect="1" />
    <xacro:wheel prefix="wheel_right" x_reflect="-1" y_reflect="-1" />

    <!-- Caster -->
    <link name="front_caster">
        <visual>
            <geometry>
                <sphere radius="${caster_radius}"/>
            </geometry>
            <material name="Cyan">
                <color rgba="0 1.0 1.0 1.0"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${caster_radius}"/>
            </geometry>
        </collision>
        <xacro:inertial_sphere mass="0.5" radius="${caster_radius}">
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        </xacro:inertial_sphere>
    </link>

    <joint name="caster_joint" type="fixed">
        <parent link="base_link"/>
        <child link="front_caster"/>
        <origin xyz="${caster_xoff} 0.0 -0.02" rpy="0.0 0.0 0.0"/>
    </joint>
</robot>